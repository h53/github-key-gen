#!/bin/bash

prefix=$0
suffix=$1

#### gh install start
echo install gh...
# https://github.com/cli/cli/releases
version=2.27.0

function get_gh_cli()
{
url=

if [[ "$OSTYPE" == "darwin"* ]]; then
  # mac
  echo "mac os!" `arch`
  if [[ `arch` =~ "x86_64" ]]; then
    url="https://github.com/cli/cli/releases/download/v$version/gh_${version}_macOS_amd64.tar.gz"
  elif [[ `arch` =~ "arm" ]]; then
    url="https://github.com/cli/cli/releases/download/v$version/gh_${version}_macOS_arm64.tar.gz"
  fi

else
  # linux
  echo "linux os!" `arch`
  if [[ `arch` =~ "x86_64" ]]; then
    url="https://github.com/cli/cli/releases/download/v$version/gh_${version}_linux_amd64.tar.gz"
  elif [[ `arch` =~ "aarch64" ]]; then
    url="https://github.com/cli/cli/releases/download/v$version/gh_${version}_linux_arm64.tar.gz"
  fi
fi

echo $url

curl -Lk $url --output content.tar.gz

tar -xf content.tar.gz
mv gh_$version* gh_cli
rm -rf content.tar.gz

}

if [[ ! -d gh_cli ]]; then
  get_gh_cli 
fi

export PATH=$(pwd)/gh_cli/bin/:$PATH
#### gh install end

### ssh keygen start
echo generate key...

if [[ $prefix != "" ]]; then
    prefix="$prefix|"
fi

if [[ $suffix != "" ]]; then
    suffix="|$suffix"
fi

function addConfigItem()
{
    if [[ "$OSTYPE" == "darwin"* ]]; then
        sed -i "" '/# generated by github-keygen/,+3d' ~/.ssh/config
        # del blank line
        sed -i "" '/^$/d' ~/.ssh/config
    else
        sed -i '/# generated by github-keygen/,+3d' ~/.ssh/config
        # del blank line
        sed -i '/^$/d' ~/.ssh/config
    fi
    
    echo >> ~/.ssh/config
    echo "# generated by github-keygen" >> ~/.ssh/config
    echo "Host github.com" >> ~/.ssh/config
    echo "    HostName ssh.github.com" >> ~/.ssh/config
    echo "    IdentityFile ~/.ssh/id_github_key_gen" >> ~/.ssh/config
    echo "Added github.com in ~/.ssh/config"
}

sshKeyFile=id_github_keygen
title="${prefix}github-keygen-`uname`-`arch`[`date`]`whoami`(`hostname`)$suffix"

ssh-keygen -t rsa -b 4096 -C "$title" -f ~/.ssh/${sshKeyFile}

ssh-agent ssh-add ~/.ssh/${sshKeyFile}

gh auth login -h github.com -s admin:public_key
# gh auth refresh -h github.com -s admin:public_key

gh ssh-key add < ~/.ssh/${sshKeyFile}.pub --title "$title" && \

addConfigItem

### ssh keygen end

# test connection
ssh -T git@github.com

echo https://github.com/settings/keys to see keys!

# del gh token
rm ~/.config/gh/hosts.yml

# del gh bin
rm -rf gh_cli

echo "done"
